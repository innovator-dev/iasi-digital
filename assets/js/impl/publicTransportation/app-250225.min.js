/*
 (c) 2018-2025. Iasi Digital [https://iasi.digital]
*/
class Vehicle{constructor(b,c=[],a=[]){this.id=b.id||0;this.label=b.label||null;this.lastUpdate=b.timestamp;this.lastUpdateFriendly=CityApp.dateDiff(this.lastUpdate,!0);this.latitude=b.latitude;this.longitude=b.longitude;this.routeId=b.route_id||0;this.routeName=(this.route=c[this.routeId])&&this.route.hasOwnProperty("long")?this.route["long"]:null;this.routeNumber=this.route&&this.route.hasOwnProperty("name")?this.route.name:null;this.routeType=this.route&&this.route.hasOwnProperty("type")?this.route.type:
-1;this.tripId=b.trip_id;this.tripHeadSign=(this.trip=a[this.tripId])&&this.trip.hasOwnProperty("headSign")?this.trip.headSign:null;this.tripDirection=this.trip&&this.trip.hasOwnProperty("direction")?this.trip.direction:0;this.tripRoute=this.trip&&this.trip.hasOwnProperty("route")?this.trip.route:null;this.speed=b.speed||0}}
class PublicTransportation extends DataSet{constructor(){super();this.routes={0:["#a2238e","#fff"],1:["#ec008c","#fff"],3:["#00a650","#fff"],5:["#e77817","#fff"],6:["#f9c0c1","#222"],7:["#2e3092","#fff"],8:["#d2e288","#222"],9:["#4ea391","#fff"],11:["#f05b72","#fff"],13:["#00adef","#222"]};this.dataSet="299d-6338-47a9-88c3-2a2e/4f88a270a42ccb12ebc1cb85b84525e93ec6";this.selectedMarker=null;this.dataSetTrips="299d-6338-47a9-88c3-2a2e/dc59becae8c49376e853a7997427d3829656";this.vehicleTrips=[];this.dataSetRoutes=
"https://iasi.digital/data/publicTransportation/routes.json";this.vehicleRoutes=[]}init(){this.getTripsData();this.getRoutesData();this.setWatcher(6E4,()=>{this.getData()});setInterval(()=>{this.getTripsData()},12E4)}getData(b=null){return PublicTransportation.fetch(this.dataSet,c=>{this.data=c;b&&b()})}getTripsData(b=null){return PublicTransportation.fetch(this.dataSetTrips,c=>{c.forEach(a=>{this.vehicleTrips[a.trip_id]={route:a.route_id,trip:a.trip_id,headSign:a.trip_headsign,direction:a.direction_id,
shape:a.shape_id}});b&&b()})}getRoutesData(b=null){return CityApp.getSetData({url:this.dataSetRoutes,callback:c=>{c.forEach(a=>{this.vehicleRoutes[a.route_id]={name:a.route_short_name,long:a.route_long_name,type:a.route_type,color:a.route_color}});b&&b()}})}render(b){0===Object.keys(this.vehicleTrips).length&&this.getTripsData();this.hasData()?this.data.forEach(c=>{const a=new Vehicle(c,this.vehicleRoutes,this.vehicleTrips);if(a.latitude&&a.longitude&&a.routeId&&a.tripId&&a.routeName&&60>a.lastUpdateFriendly)if(this.markers[a.id])this.markers[a.id]._ref.position=
{lat:parseFloat(c.latitude),lng:parseFloat(c.longitude)},!this.markers[a.id].isVisible&&this.markers[a.id]._ref&&(this.markers[a.id]._ref.setMap(CityApp.data.map._ref),this.markers[a.id].isVisible=!0);else{let [d,e]=this.routes[a.routeNumber]?this.routes[a.routeNumber]:this.routes[0];c=document.createElement("div");c.innerText=a.routeNumber;c=new google.maps.marker.PinElement({glyphColor:e,background:d,borderColor:d,glyph:c});c=new google.maps.marker.AdvancedMarkerElement({position:{lat:parseFloat(a.latitude),
lng:parseFloat(a.longitude)},map:CityApp.data.map._ref,title:a.label,content:c.element});this.markers[a.id]={id:a.id,type:a.routeType,route:a.routeNumber,_ref:c,isVisible:!0};this.markers[a.id]._ref.addListener("click",()=>{this.selectedMarker=this.markers[a.id]._ref;CityApp.mapUtils("closePopup");CityApp.mapUtils("createPopup",{title:a.routeName,titleLabel:this.markers[a.id].route,titleLabelClass:["route",`route-${this.markers[a.id].route}`],content:`<ul><li><strong>${CityApp.config.labels["transportation.direction"]}: ${a.tripHeadSign}</strong></li><li title="${a.lastUpdate}">${CityApp.config.labels["transportation.lastUpdate"]}: ${CityApp.config.labels["transportation.tkTimeAgo"].replace("{{TIME}}",
a.lastUpdateFriendly)}</li><li>${CityApp.config.labels["transportation.identifier"]}: ${a.label}</li><li>${CityApp.config.labels["transportation.speed"]}: ${CityApp.config.labels["transportation.tkSpeed"].replace("{{SPEED}}",a.speed)}</li></ul>`,onClose:()=>{this.selectedMarker=null}});CityApp.mapUtils("openPopup",{ref:this.markers[a.id]._ref})})}}):this.getData(()=>{this.render()})}show(b=null){this.hasData()?(this.render(),this.setWatcher(3E4,()=>{this.getData(()=>{this.render()})}),this.isVisible=
!0):this.getData(()=>{setTimeout(()=>{this.show()},1E3)});b&&b()}hide(b=null){Object.values(this.markers).forEach(c=>{c._ref&&(c._ref.setMap(null),c.isVisible=!1)});this.isVisible=!1;this.setWatcher(6E4,()=>{this.getData()});b&&b()}}(()=>{CityApp.data.sets.publicTransportation=new PublicTransportation})();
