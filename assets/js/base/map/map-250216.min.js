/*
 (c) 2018-2025. Iasi Digital [https://iasi.digital]
*/
class Observer{constructor(){this.items=[]}add(b,a){this.items[b]||(this.items[b]={name:b,callback:[]});this.items[b].callback.push(a)}fireAll(){for(let b in this.items)this.fire(b)}clearAll(b){this.items[b]={name:b,callback:[]}}fire(b){if(this.items[b])for(let a in this.items[b].callback)this.items[b].callback[a]()}}
class DataSet{constructor(){this.watcher=this._ref=null;this.isVisible=!1;this.data={};this.markers=[];this.props={};this.metrics={}}static fetch(b,a){return CityApp.getSetData({url:CityApp.config.url,method:"POST",postFields:{action:"fetch",type:"api",value:b},callback:a})}setWatcher(b,a){this.clearWatcher();this.watcher=setInterval(()=>{null!==a&&a()},b)}clearWatcher(){null!==this.watcher&&(clearInterval(this.watcher),this.watcher=null)}init(){}show(b){}hide(b){}render(b){}hasData(){return 0<Object.keys(this.data).length}}
class CityApp{static init(){this.events=new Observer;this.config={};this.bindConfig();this.data={map:{_ref:null,center:{lat:47.1553424,lng:27.585645},isLoaded:!1,popup:null,controls:{}},sets:{},services:{},user:{_ref:null,watcher:null,coordinates:{lat:0,lng:0},isPersistent:!1,isVisible:!1,props:{}}};this.loadMap()}static async api(b,a="GET",e="",f={}){e={method:a,mode:"cors",cache:"no-cache",credentials:"same-origin",headers:Object.assign({Accept:"application/json","Content-Type":"application/json"},
f),body:e?JSON.stringify(e):""};"GET"!==a&&"HEAD"!==a||delete e.body;return await fetch(b,e)}static load(b,a,e){let f=document.getElementsByTagName("script")[0],c=document.createElement("script");void 0!==a&&null!==a&&(c.onreadystatechange=()=>{if("loaded"===c.readyState||"complete"===c.readyState)c.onreadystatechange=null,a(e)},c.onload=()=>{a(e)});c.setAttribute("src",b);c.setAttribute("defer","");f.parentNode.appendChild(c)}static async bindConfig(){const b=document.querySelector("body.page").dataset;
b.bind&&(this.config=Object.assign(this.config,JSON.parse(atob(b.bind))));CityApp.api("config.json").then(a=>a.ok?a.json():!1).then(a=>{this.config=Object.assign(this.config,a)}).catch(a=>{console.error(a)})}static notification(b,a="error",e=0,f=!0){const c=document.querySelector(".notification-floating-placeholder");if(c){const g=c.querySelectorAll(".notification"),d=document.createElement("p");d.classList.add("notification","notification-sm");d.classList.remove("error","success","info","warning");
d.classList.add(a);d.innerHTML=b;f?(d.classList.add("notification-floating","notification-animation"),0<g.length&&(d.style.bottom=`${45*g.length+20}px`)):0<g.length&&(c.innerHTML="");c.appendChild(d);0<e&&setTimeout(()=>{d.classList.remove("notification","notification-sm","notification-inline","notification-animation","notification-floating","error","success","info","warning");d.innerHTML="";d.parentNode.removeChild(d)},1E3*e)}}static dateDiff(b,a=!1){let e=b.split(/\D/);b=new Date;a&&(b=new Date(b.getTime()+
6E4*b.getTimezoneOffset()));a=new Date(e[0],e[1]-1,e[2],e[3],e[4],e[5]);if(isNaN(b)||isNaN(a))return null;a=Math.abs(b.getTime()-a.getTime());return Math.floor(a/1E3/60)}static getSetData(b){try{if(!b.url&&this.config.messages["apiCall.error.missingUrl"])throw this.config.messages["apiCall.error.missingUrl"];this.api(b.url,b.method||"GET",b.postFields||{}).then(a=>a.ok?a.json():!1).then(a=>{null!==b.callback&&b.callback(a)}).catch(()=>!1)}catch(a){this.notification(a,"error",10)}return!0}static mapUtils(b,
a={}){if("createPopup"===b){if(!a.hasOwnProperty("title")||!a.hasOwnProperty("content"))throw new SyntaxError("Syntax error while performing <createPopup>.");CityApp.data.map.popup=new google.maps.InfoWindow({content:`<div id="mapPopup"><main>${a.content}</main></div>`});b=document.createElement("h5");if(a.hasOwnProperty("titleLabel")){var e=document.createElement("span");e.classList.add("label","ic-mr-10");e.innerText=a.titleLabel;a.hasOwnProperty("titleLabelClass")&&e.classList.add(...a.titleLabelClass);
a.hasOwnProperty("titleLabelIcon")&&e.setAttribute("data-icon",a.titleLabelIcon);b.appendChild(e)}e=document.createElement("span");e.innerText=a.title;b.appendChild(e);CityApp.data.map.popup.setHeaderContent(b);a.hasOwnProperty("position")&&CityApp.data.map.popup.setPosition(a.position);a.hasOwnProperty("onClose")&&google.maps.event.addListener(CityApp.data.map.popup,"close",a.onClose);a.hasOwnProperty("onCloseClick")&&google.maps.event.addListener(CityApp.data.map.popup,"closeclick",a.onCloseClick)}else if("openPopup"===
b){if(!a.hasOwnProperty("ref"))throw new SyntaxError("Syntax error while performing <openPopup>.");null!==CityApp.data.map.popup&&CityApp.data.map.popup.open(CityApp.data.map._ref,a.ref)}else"closePopup"===b&&CityApp.data.map.popup&&CityApp.data.map.popup.close()}static loadMap(){document.querySelector("#map")&&this.config.map&&this.load(this.config.map)}static renderMap(){const b=document.querySelector("#map");b&&this.config.map&&(this.data.map._ref=new google.maps.Map(b,{center:this.data.map.center,
zoom:14,streetViewControl:!1,mapTypeControl:!1,fullscreenControl:!0,mapId:"4c67bc89ba82ae84"}),google.maps.event.addListenerOnce(this.data.map._ref,"tilesloaded",()=>{this.data.map.isLoaded=!0;google.maps.importLibrary("marker");google.maps.importLibrary("geometry");this.renderMapControls()}))}static renderMapControls(){this.events.add("hideMyLocation",()=>{null!==this.data.user._ref&&(this.data.user._ref.setMap(null),this.data.user._ref=null);null!==this.data.user.watcher&&(navigator.geolocation.clearWatch(this.data.user.watcher),
this.data.user.watcher=null);this.data.user.isVisible=!1;this.data.user.isPersistent=!1;this.data.user.coordinates.lat=0;this.data.user.coordinates.lng=0});const b=document.querySelector(".mapControls");if(b&&this.data.map.isLoaded){var a=document.createElement("div");a.classList.add("mapControlsContainer");const e=document.createElement("button");e.classList.add("mapCustomControl");e.innerHTML='<span data-icon="&#xe013;"></span>';e.title=this.config.labels.centerOnCity;e.type="button";e.addEventListener("click",
g=>{g.preventDefault();g.stopPropagation();0<this.data.map.center.lat&&0<this.data.map.center.lng&&(this.data.map._ref.panTo(new google.maps.LatLng(this.data.map.center.lat,this.data.map.center.lng)),this.data.map._ref.setZoom(14))});a.appendChild(e);this.data.map._ref.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(a);a=document.createElement("div");a.classList.add("mapControlsContainer");const f=document.createElement("button");f.setAttribute("data-state","hideLocation");f.classList.add("mapCustomControl",
"separator");f.innerHTML='<span data-icon="&#xe018;"></span>';f.title=this.config.labels["myLocation.showMyLocation"];f.type="button";const c=document.createElement("button");c.setAttribute("data-state","hidePersistent");c.classList.add("mapCustomControl","separator","hide");c.innerHTML='<span data-icon="&#xe015;"></span>';c.title=this.config.labels["myLocation.showMyLocationPersistent"];c.type="button";c.addEventListener("click",()=>{"hidePersistent"===c.getAttribute("data-state")?(c.setAttribute("data-state",
"showPersistent"),c.classList.add("selected"),this.data.user.isPersistent=!0,this.data.user.watcher=navigator.geolocation.watchPosition(g=>{this.data.user.coordinates.lat=g.coords.latitude;this.data.user.coordinates.lng=g.coords.longitude;this.data.map._ref.panTo(new google.maps.LatLng(this.data.user.coordinates.lat,this.data.user.coordinates.lng));this.data.user._ref.position={lat:parseFloat(this.data.user.coordinates.lat),lng:parseFloat(this.data.user.coordinates.lng)}},()=>{},{enableHighAccuracy:!0,
timeout:5E3})):(c.setAttribute("data-state","hidePersistent"),c.classList.remove("selected"),this.data.user.isPersistent=!1,null!==this.data.user.watcher&&(navigator.geolocation.clearWatch(this.data.user.watcher),this.data.user.watcher=null))});f.addEventListener("click",g=>{g.preventDefault();g.stopPropagation();navigator.geolocation?"hideLocation"===f.getAttribute("data-state")?(f.setAttribute("data-state","showLocation"),f.classList.add("selected"),c.classList.remove("hide"),navigator.geolocation.getCurrentPosition(d=>
{this.data.user.coordinates.lat=d.coords.latitude;this.data.user.coordinates.lng=d.coords.longitude;void 0===this.data.user.props.pin&&(this.data.user.props.pin=new google.maps.marker.PinElement({glyphColor:"#fff",background:"#31496d",borderColor:"#31496d"}));null===this.data.user._ref&&(this.data.user._ref=new google.maps.marker.AdvancedMarkerElement({position:{lat:parseFloat(this.data.user.coordinates.lat),lng:parseFloat(this.data.user.coordinates.lng)},map:this.data.map._ref,title:this.config.labels.myLocation,
content:this.data.user.props.pin.element}),this.data.user._ref.setMap(this.data.map._ref));this.data.user.isVisible=!0;this.data.map._ref.panTo(new google.maps.LatLng(this.data.user.coordinates.lat,this.data.user.coordinates.lng));CityApp.mapUtils("createPopup",{title:this.config.labels.myLocation,titleLabel:"",titleLabelIcon:"\ue016",content:`<ul><li>Latitudine: ${this.data.user.coordinates.lat}</li><li>Longitudine: ${this.data.user.coordinates.lng}</li></ul>`,onClose:()=>{this.data.user._ref.content.classList.remove("pin-bounce")}});
this.data.user._ref.addListener("click",()=>{CityApp.mapUtils("openPopup",{ref:this.data.user._ref});this.data.user._ref.content.classList.add("pin-bounce")})},()=>{try{this.events.fire("hideMyLocation"),app.config.messages["location.error.unableToDetermine"]&&this.notification(app.config.messages["location.error.unableToDetermine"],"info",10)}catch(d){this.notification(d,"error",10),c.setAttribute("data-state","hidePersistent"),c.setAttribute("disabled","disabled"),c.classList.remove("selected"),
c.classList.add("hide"),f.setAttribute("data-state","hideLocation"),f.setAttribute("disabled","disabled"),f.classList.remove("selected"),this.data.user.isPersistent=!1}},{enableHighAccuracy:!0,timeout:5E3})):(f.setAttribute("data-state","hideLocation"),f.classList.remove("selected"),c.setAttribute("data-state","hidePersistent"),c.classList.remove("selected"),c.classList.add("hide"),this.events.fire("hideMyLocation")):(c.setAttribute("data-state","hidePersistent"),c.setAttribute("disabled","disabled"),
c.classList.remove("selected"),c.classList.add("hide"),f.setAttribute("data-state","hideLocation"),f.setAttribute("disabled","disabled"),f.classList.remove("selected"),this.events.fire("hideMyLocation"))});a.appendChild(c);a.appendChild(f);this.data.map._ref.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(a);this.data.map.controls={spinner:b.querySelector("h2 .spinner"),publicTransportation:b.querySelector('input[type=checkbox][name="toggle.mobility.publicTransportation"]'),publicParking:b.querySelector('input[type=checkbox][name="toggle.mobility.publicParking"]'),
trafficLayer:b.querySelector('input[type=checkbox][name="toggle.mobility.trafficLayer"]'),airQuality:b.querySelector('input[type=checkbox][name="toggle.environment.airQuality"]'),wasteCollection:b.querySelector('input[type=checkbox][name="toggle.environment.wasteCollection"]')};b.classList.remove("hide");b.querySelectorAll(".btn-toggle").forEach(g=>{const d=g.dataset;d.set&&(this.data.sets[d.set]=new DataSet,"trafficLayer"===d.set?g.addEventListener("click",()=>{this.data.map.controls.spinner.classList.remove("hide");
this.data.map.controls[d.set].checked?(this.data.sets[d.set]._ref=new google.maps.TrafficLayer,this.data.sets[d.set]._ref.setMap(this.data.map._ref),this.data.sets[d.set].isVisible=!0):(this.data.sets[d.set]._ref.setMap(null),this.data.sets[d.set]._ref=null,this.data.sets[d.set].isVisible=!1);this.data.map.controls.spinner.classList.add("hide")}):d.source&&(this.load(d.source,()=>{this.data.sets[d.set].init();this.data.sets[d.set].getData(()=>{this.data.sets[d.set].hasData()||this.data.map.controls[d.set].setAttribute("disabled",
"disabled")})}),g.addEventListener("click",()=>{this.data.map.controls.spinner.classList.remove("hide");this.data.map.controls[d.set].checked?this.data.sets[d.set].show():this.data.sets[d.set].hide();this.data.map.controls.spinner.classList.add("hide")})))})}}}(()=>{CityApp.init();window.CityApp=CityApp})();
