/*
 (c) Iasi Digital [https://iasi.digital]
*/
const publicTransportation=(()=>{function l(a=null){return app.fetch({url:app.config.url,method:"POST",postFields:{action:"fetch",type:"api",value:"dc2a-cd0a-477f-95f3-1107"},callback:c=>{app.dataSets.publicTransportation.data.vehicles=c;app.dataSets.publicTransportation.updated=Date.now();a&&a()}})}function p(a=null){return app.fetch({url:app.config.url,method:"POST",postFields:{action:"fetch",type:"api",value:"dc2a-cd0a-477f-95f3-1107/52cf25d5c64d1f700b8867cee05112525698"},callback:c=>{app.dataSets.publicTransportation.data.trips=
{};c.forEach(b=>{app.dataSets.publicTransportation.data.trips[b.trip_id]={route:b.route_id,trip:b.trip_id,headSign:b.trip_headsign,direction:b.direction_id,shape:b.shape_id}});a&&a()}})}function x(){return app.fetch({url:`${app.cdn}js/publicTransportation/routes.json`,callback:a=>{app.dataSets.publicTransportation.data.routes={};a.forEach(c=>{app.dataSets.publicTransportation.data.routes[c.route_id]={name:c.route_short_name,long:c.route_long_name,type:c.route_type,color:c.route_color}})}})}function q(a,
c=null){null!==app.dataSets.publicTransportation.watcher&&(clearInterval(app.dataSets.publicTransportation.watcher),app.dataSets.publicTransportation.watcher=null);app.dataSets.publicTransportation.watcher=setInterval(()=>{null!==c&&c()},a)}function r(){void 0===app.dataSets.publicTransportation.data.trips&&(p(),setInterval(()=>{p()},12E4));void 0===app.dataSets.publicTransportation.data.vehicles?l(()=>{r()}):(app.events.add("hideMyLocation",()=>{h()}),app.dataSets.publicTransportation.data.vehicles.forEach(a=>
{let c=app.dateDiff(a.timestamp,!0);if(a.latitude&&a.longitude&&a.route_id&&a.trip_id&&app.dataSets.publicTransportation.data.routes[a.route_id]&&app.dataSets.publicTransportation.data.trips[a.trip_id]&&60>c){let b=app.dataSets.publicTransportation.data.routes[a.route_id].name.trim(),m=app.dataSets.publicTransportation.data.routes[a.route_id].long.trim(),f=app.dataSets.publicTransportation.data.routes[a.route_id].type,g=app.dataSets.publicTransportation.data.trips[a.trip_id].headSign.trim();if(app.dataSets.publicTransportation.markers[a.label]){if(app.dataSets.publicTransportation.markers[a.label].ref.position=
{lat:a.latitude,lng:a.longitude},app.dataSets.publicTransportation.markers[a.label].lastUpdate=a.timestamp,app.dataSets.publicTransportation.markers[a.label].popup=`<div id="mapPopup"><header>${null!==b?`<span class="map-label route route-${b} ic-mr-10">${b}</span>`:""}<h5>${m}</h5></header><main><ul><li><strong>Direc\u021bie</strong>: ${g}</li><li><strong>Ultima actualizare</strong>: acum ${c} minute</li><li><strong>Cod identificare</strong>: ${a.label}</li><li><strong>Vitez\u0103</strong>: ${a.speed} km/h</li></ul><nav><button class="btn btn-render-eta" data-lat="${parseFloat(a.latitude)}" data-lng="${parseFloat(a.longitude)}" data-route="${g}" data-route-id="${b}">Afi\u0219eaz\u0103 estimare <span data-icon="&#xe018;" class="ic-ml-5"></span></button></nav></main></div>`,
app.dataSets.publicTransportation.selectedMarker.label&&app.dataSets.publicTransportation.selectedMarker.label===a.label)try{null===app.map.direction.service&&app.events.fire("initiateDirectionService"),(0===app.me.location.lat||0===app.me.location.lng&&app.config.messages["route.error.unableToDetermine"])&&app.notify(app.config.messages["route.error.unableToDetermine"],"error",10),app.map.direction.service.route({origin:new google.maps.LatLng(app.me.location.lat,app.me.location.lng),destination:new google.maps.LatLng(parseFloat(a.latitude),
parseFloat(a.longitude)),travelMode:"DRIVING"},function(d,e){"OK"===e&&(d.routes[0].legs[0]&&t(d.routes[0].legs[0].distance.text,d.routes[0].legs[0].duration.text,g,b),app.map.direction.renderer.setDirections(d))})}catch(d){app.notify(d,"error",10),h()}}else{let d=document.createElement("img");d.src=`${app.cdn}pin/public-transportation/${null!==b?`${b}.png`:`${0===f?"tram":"bus"}.png`}`;d.width=22;d.height=35;app.dataSets.publicTransportation.markers[a.label]={id:a.label,type:f,route:b,ref:new google.maps.marker.AdvancedMarkerElement({map:app.map.ref,
position:{lat:parseFloat(a.latitude),lng:parseFloat(a.longitude)},title:a.route_id.toString(),content:d}),lastUpdate:a.timestamp,visible:!0,popup:`<div id="mapPopup"><header>${null!==b?`<span class="map-label route route-${b} ic-mr-10">${b}</span>`:""}<h5>${m}</h5></header><main><ul><li><strong>Direc\u021bie</strong>: ${g}</li><li><strong>Ultima actualizare</strong>: acum ${c} minute</li><li><strong>Cod identificare</strong>: ${a.label}</li><li><strong>Vitez\u0103</strong>: ${a.speed} km/h</li></ul><nav><button class="btn btn-render-eta" data-lat="${parseFloat(a.latitude)}" data-lng="${parseFloat(a.longitude)}" data-route="${g}" data-route-id="${b}">Afi\u0219eaz\u0103 estimare <span data-icon="&#xe018;" class="ic-ml-5"></span></button></nav></main></div>`};
app.dataSets.publicTransportation.markers[a.label].ref.addListener("click",()=>{app.map.popup&&(app.map.popup.close(),app.dataSets.publicTransportation.selectedMarker=null);app.dataSets.publicTransportation.selectedMarker={ref:app.dataSets.publicTransportation.markers[a.label].ref,label:a.label};app.map.popup=new google.maps.InfoWindow({content:app.dataSets.publicTransportation.markers[a.label].popup});app.map.popup.open(app.map.ref,app.dataSets.publicTransportation.selectedMarker.ref);google.maps.event.addListener(app.map.popup,
"closeclick",()=>{app.dataSets.publicTransportation.selectedMarker=null;app.map.popup=null;h()});google.maps.event.addListener(app.map.popup,"domready",()=>{const e=document.querySelector(".btn-render-eta");if(e){let n=parseFloat(e.getAttribute("data-lat"))||0,u=parseFloat(e.getAttribute("data-lng"))||0,v=e.getAttribute("data-route"),w=e.getAttribute("data-route-id");0<n&&0<u&&v&&w&&e.addEventListener("click",z=>{try{null===app.map.direction.service&&app.events.fire("initiateDirectionService"),(0===
app.me.location.lat||0===app.me.location.lng&&app.config.messages["route.error.unableToDetermine"])&&app.notify(app.config.messages["route.error.unableToDetermine"],"error",10),app.map.direction.service.route({origin:new google.maps.LatLng(app.me.location.lat,app.me.location.lng),destination:new google.maps.LatLng(n,u),travelMode:"DRIVING"},function(k,y){"OK"===y&&(k.routes[0].legs[0]&&t(k.routes[0].legs[0].distance.text,k.routes[0].legs[0].duration.text,v,w),app.map.direction.renderer.setDirections(k))})}catch(k){app.notify(k,
"error",10),h()}})}})})}}}))}function t(a,c,b,m){const f=document.querySelector(".mapControlsVehicle");if(f){const g=f.querySelector(".route-distance"),d=f.querySelector(".route-estimate"),e=f.querySelector("p"),n=f.querySelector("button.btn-hide");n&&n.addEventListener("click",h);g.innerHTML=`${a}`;d.innerHTML=`${c}`;e.innerHTML=`<span class="map-label route route-${m} ic-mr-5">${m}</span> ${b}`;f.classList.remove("hide")}}function h(){const a=document.querySelector(".mapControlsVehicle").querySelector("button.btn-hide");
a&&a.removeEventListener("click",h);app.map.popup&&app.map.popup.close();app.events.fire("clearDirectionService");document.querySelector(".mapControlsVehicle").classList.add("hide");app.dataSets.publicTransportation.selectedMarker=null}return{init:function(){p();x();q(6E4,()=>{l()})},getData:l,show:function(){r();q(2E4,()=>{l(()=>{r()})});app.dataSets.publicTransportation.visible=!0},hide:function(){q(6E4,()=>{l()});Object.values(app.dataSets.publicTransportation.markers).forEach(a=>{a.ref&&a.ref.setMap(null)});
app.dataSets.publicTransportation.markers=[];app.dataSets.publicTransportation.visible=!1}}})();(()=>{app.dataSets.publicTransportation.app=publicTransportation})();
